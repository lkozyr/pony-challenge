"use strict";var precacheConfig=[["/pony-challenge/index.html","694cbddbe3a79b9c7efe95d0c70c04e7"],["/pony-challenge/static/css/main.ae8278d7.css","7990bbe4128a3111def91adcbbd4a217"],["/pony-challenge/static/js/main.09119d8a.js","486bb515f6fe8324fc385a0d23bc5b72"],["/pony-challenge/static/media/Applejack.e4b5190c.png","e4b5190c52d305f8fbf033c816054f57"],["/pony-challenge/static/media/Fluttershy.7873c5c0.png","7873c5c0f71d918cbeebab05b38244fe"],["/pony-challenge/static/media/Monster.31b04544.png","31b0454465305995fe5f46b866ec5cbd"],["/pony-challenge/static/media/PermanentMarker.3e9e8a23.ttf","3e9e8a239b6b397ac5d6cad602565cee"],["/pony-challenge/static/media/PinkiePie.94c9d344.png","94c9d34457bc1ff2091d57bd71483c7e"],["/pony-challenge/static/media/RainbowDash.37d7cb96.png","37d7cb962ae46df82371f90fbeb03775"],["/pony-challenge/static/media/Rarity.6cb2c1e7.png","6cb2c1e7f81703efe98463ac56e4d4e8"],["/pony-challenge/static/media/SadPony.5670ad7b.gif","5670ad7be5d94cad60161e59439d5176"],["/pony-challenge/static/media/Spike.bafed787.png","bafed787f21048edc594cd196c8e31f1"],["/pony-challenge/static/media/TwilightSparkle.5c3a5c8d.png","5c3a5c8db5aacb38f92a46159c20e34a"],["/pony-challenge/static/media/UbuntuMono-Regular.9383f4b0.ttf","9383f4b0bc1d264a5a7e094eb1ed0c0b"],["/pony-challenge/static/media/exit.714c8eb0.png","714c8eb036260fee74d04dd19fdfa234"],["/pony-challenge/static/media/lost.52b53826.mp3","52b53826ba253bf501d879893845b5f4"],["/pony-challenge/static/media/move.81423ef8.mp3","81423ef888b9d1ce7b1bd31c24832f14"],["/pony-challenge/static/media/win.6446c3f2.mp3","6446c3f24f095aca7dfff38aa401d794"],["/pony-challenge/static/media/wrong-move.1b729878.mp3","1b729878bf7c09dbd96752b84a1480ca"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,n){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=n),t.toString()},cleanResponse=function(n){return n.redirected?("body"in n?Promise.resolve(n.body):n.blob()).then(function(e){return new Response(e,{headers:n.headers,status:n.status,statusText:n.statusText})}):Promise.resolve(n)},createCacheKey=function(e,n,t,a){var c=new URL(e);return a&&c.pathname.match(a)||(c.search+=(c.search?"&":"")+encodeURIComponent(n)+"="+encodeURIComponent(t)),c.toString()},isPathWhitelisted=function(e,n){if(0===e.length)return!0;var t=new URL(n).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,t){var n=new URL(e);return n.hash="",n.search=n.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(n){return t.every(function(e){return!e.test(n[0])})}).map(function(e){return e.join("=")}).join("&"),n.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var n=e[0],t=e[1],a=new URL(n,self.location),c=createCacheKey(a,hashParamName,t,/\.\w{8}\./);return[a.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(a){return setOfCachedUrls(a).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(n){if(!t.has(n)){var e=new Request(n,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+n+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return a.put(n,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(n){return n.keys().then(function(e){return Promise.all(e.map(function(e){if(!t.has(e.url))return n.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(n){if("GET"===n.request.method){var e,t=stripIgnoredUrlParameters(n.request.url,ignoreUrlParametersMatching),a="index.html";(e=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,a),e=urlsToCacheKeys.has(t));var c="/pony-challenge/index.html";!e&&"navigate"===n.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],n.request.url)&&(t=new URL(c,self.location).toString(),e=urlsToCacheKeys.has(t)),e&&n.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',n.request.url,e),fetch(n.request)}))}});